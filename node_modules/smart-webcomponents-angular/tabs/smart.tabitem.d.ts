import { TabItem } from './../index';
import { AfterViewInit, ElementRef, OnInit, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';
import { BaseElement } from './smart.element';
import * as i0 from "@angular/core";
export { ElementRenderMode } from './../index';
export { Smart } from './smart.element';
export { TabItem } from './../index';
export declare class TabItemComponent extends BaseElement implements OnInit, AfterViewInit, OnDestroy, OnChanges {
    constructor(ref: ElementRef<TabItem>);
    private eventHandlers;
    nativeElement: TabItem;
    /** @description Creates the component on demand.
     * @param properties An optional object of properties, which will be added to the template binded ones.
     */
    createComponent(properties?: {}): any;
    /** @description Tab item close button state */
    get closeButtonHidden(): boolean;
    set closeButtonHidden(value: boolean);
    /** @description Disables the Tab item */
    get disabled(): boolean;
    set disabled(value: boolean);
    /** @description Tab item index */
    get index(): number;
    set index(value: number);
    /** @description Tab item selected state */
    get selected(): boolean;
    set selected(value: boolean);
    /** @description Tab item label */
    get label(): string;
    set label(value: string);
    /** @description Tab item content */
    get content(): any;
    set content(value: any);
    /** @description Tab item label size */
    get labelSize(): number;
    set labelSize(value: number);
    get isRendered(): boolean;
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    ngOnChanges(changes: SimpleChanges): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<TabItemComponent, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<TabItemComponent, "smart-tab-item, [smart-tab-item]", ["smart-tab-item"], { "closeButtonHidden": "closeButtonHidden"; "disabled": "disabled"; "index": "index"; "selected": "selected"; "label": "label"; "content": "content"; "labelSize": "labelSize"; }, {}, never>;
}
