import { ListItem } from './../index';
import { ListItemDisplayMode } from './../index';
import { AfterViewInit, ElementRef, OnInit, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';
import { BaseElement } from './smart.element';
import * as i0 from "@angular/core";
export { ListItemDisplayMode, ElementRenderMode } from './../index';
export { Smart } from './smart.element';
export { ListItem } from './../index';
export declare class ListItemComponent extends BaseElement implements OnInit, AfterViewInit, OnDestroy, OnChanges {
    constructor(ref: ElementRef<ListItem>);
    private eventHandlers;
    nativeElement: ListItem;
    /** @description Creates the component on demand.
     * @param properties An optional object of properties, which will be added to the template binded ones.
     */
    createComponent(properties?: {}): any;
    /** @description  */
    get alternationIndex(): number;
    set alternationIndex(value: number);
    /** @description  */
    get color(): string;
    set color(value: string);
    /** @description  */
    get displayMode(): ListItemDisplayMode | string;
    set displayMode(value: ListItemDisplayMode | string);
    /** @description  */
    get grouped(): boolean;
    set grouped(value: boolean);
    /** @description  */
    get selected(): boolean;
    set selected(value: boolean);
    /** @description  */
    get value(): string;
    set value(value: string);
    /** @description  */
    get label(): string;
    set label(value: string);
    /** @description  */
    get details(): string;
    set details(value: string);
    /** @description  */
    get group(): string;
    set group(value: string);
    /** @description  */
    get hidden(): boolean;
    set hidden(value: boolean);
    /** @description  */
    get readonly(): boolean;
    set readonly(value: boolean);
    get isRendered(): boolean;
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    ngOnChanges(changes: SimpleChanges): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<ListItemComponent, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<ListItemComponent, "smart-list-item, [smart-list-item]", ["smart-list-item"], { "alternationIndex": "alternationIndex"; "color": "color"; "displayMode": "displayMode"; "grouped": "grouped"; "selected": "selected"; "value": "value"; "label": "label"; "details": "details"; "group": "group"; "hidden": "hidden"; "readonly": "readonly"; }, {}, never>;
}
